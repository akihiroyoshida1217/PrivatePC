#ansible-playbook main.yml --ask-become-pass --ask-pass -vvvv

- hosts: localhost
  connection: local
  become: yes
  vars:
    network_interface: eth0

  tasks:
    - name: Get version_code
      shell: cat /etc/os-release | grep VERSION_CODENAME | awk -F'=' '{print $2}'
      register: version_code

    - name: pre-install packages
      apt: name={{ item }} update_cache=yes cache_valid_time=3600
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg2
        - python-pip
      ignore_errors: "{{ ansible_check_mode }}"

    - name: Add an Apt signing key https://download.docker.com/linux/debian/gpg
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add an apt key adapta-gtk-theme and paper-icon-theme by id from a keyserver
      apt_key:
        keyserver: "{{ item.keyserver }}"
        id: "{{ item.id }}"
      with_items:
        - { keyserver: keyserver.ubuntu.com, id: EAC0D406E5D79A82ADEEDFDFB76E53652D87398A }
        - { keyserver: keyserver.ubuntu.com, id: D320D0C30B02E64C5B2BB2743766223989993A70 }

    - name: add apt repository docker
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ version_code.stdout }} stable
        state: present
        filename: docker

    - name: add apt repository ppa:snwh/ppa
      apt_repository:
        repo: "{{ item }}"
        codename: bionic
        state: present
        filename: ppa
      with_items:
        - 'ppa:snwh/ppa'
        - 'ppa:tista/adapta'

    - name: remove packages
      apt: 
        name: "{{ item }}"
        state: absent
      with_items:
        - docker
        - docker-engine
    - name: install packages
      apt: name={{ item }} update_cache=yes cache_valid_time=3600
      with_items:
        - ntp
        - mailutils
        - unattended-upgrades
        - iptables
        - iptables-persistent
        - software-properties-common
        - ibus-mozc
        - clamav-daemon
        - gnome-tweak-tool
        - adapta-gtk-theme
        - paper-icon-theme
        - alacarte
        - policykit-1
        - libnotify-bin
        - build-essential
        - libsystemd-dev
        - libgconf-2-4
        - gconf2-common
        - docker-ce
        - cifs-utils
        - python3-pkgconfig
        - auditd
        - gnome-shell-extension-move-clock
        - gnome-shell-extension-hide-activities
        - gnome-shell-extension-dashtodock
      ignore_errors: "{{ ansible_check_mode }}"
    #- name: install packages
    #  apt: 
    #    name: libgtk-3-common
    #    update_cache: yes 
    #    cache_valid_time: 3600
    #    default_release: testing
    #  ignore_errors: "{{ ansible_check_mode }}"

    - pip:
        name: "{{ item }}"
        executable: pip3
      with_items:
          - docker-compose
          - docker
          - watchdog
          - pylint
          - systemd-python
          - psutil
      ignore_errors: "{{ ansible_check_mode }}"
    #- pip:
    #    name: docker
    #    executable: pip2
    #  ignore_errors: "{{ ansible_check_mode }}"

    - name: mkdir /opt/clamav
      file: path=/opt/clamav state=directory owner=root group=root mode=0755
    - name: copy /opt/clamav/notify_viruscheck_watchdog.py
      copy: src=./files/opt/clamav/notify_viruscheck_watchdog.py dest=/opt/clamav/notify_viruscheck_watchdog.py owner=root group=root mode=0755

    - name: mkdir /opt/etc_watchdog
      file: path=/opt/etc_watchdog state=directory owner=root group=root mode=0755
    - name: copy /opt/etc_watchdog/etc_watchdog.py
      copy: src=./files/opt/etc_watchdog/etc_watchdog.py dest=/opt/etc_watchdog/etc_watchdog.py owner=root group=root mode=0755

    - name: mkdir /opt/psutil
      file: path=/opt/psutil state=directory owner=root group=root mode=0755
    - name: copy /opt/psutil/psutil_processmonitor.py
      copy: src=./files/opt/psutil/psutil_processmonitor.py dest=/opt/psutil/psutil_processmonitor.py owner=root group=root mode=0755

    - name: copy /opt/docker-image
      copy: src=./files/opt/docker-image/ dest=/opt/docker-image/ owner=root group=root
      when: not ansible_check_mode

    - name: chmod 755 /opt/docker-image/firefox-package/Firefox_with_Docker-pkexec
      file: path=/opt/docker-image/firefox-package/Firefox_with_Docker-pkexec owner=root group=root mode=0755
      when: not ansible_check_mode

    - name: chmod 755 /opt/docker-image/vscode-extension-package/vscode-extension-update.py
      file: path=/opt/docker-image/vscode-extension-package/vscode-extension-update.py owner=root group=root mode=0755
      when: not ansible_check_mode

    - name: mv /etc/audit/audit.rules etc/audit/audit.rules.org
      command: "mv /etc/audit/audit.rules etc/audit/audit.rules.org"
      ignore_errors: yes

    - name: copy /opt/inotify/inotify_watchdog.py
      copy: src=./files/auditd.rules dest=/etc/audit/audit.rules owner=root group=root mode=0640
      
    - name: chown 1001:1001 /opt/docker-image/clamav-package/clamav/patternfile
      file: path=/opt/docker-image/clamav-package/clamav/patternfile state=directory owner=1001 group=1001
      when: not ansible_check_mode
    - name: mv /var/lib/clamav/{{ item }} /var/lib/clamav/{{ item }}.org
      command: "mv /var/lib/clamav/{{ item }} /var/lib/clamav/{{ item }}.org"
      with_items:
        - bytecode.cvd
        - daily.cvd
        - daily.cld
        - main.cvd
        - mirrors.dat
      ignore_errors: yes
    - name: ln -s /opt/docker-image/clamav-package/clamav/patternfile/{{ item }} /var/lib/clamav/{{ item }}
      file: src="/opt/docker-image/clamav-package/clamav/patternfile/{{ item }}" dest="/var/lib/clamav/{{ item }}" state=link force=yes
      with_items:
        - bytecode.cvd
        - daily.cvd
        - daily.cld
        - main.cvd
        - mirrors.dat

    - name: copy /etc/systemd/system/{{ item }}
      copy: src="./files/systemd/system/{{ item }}" dest="/etc/systemd/system/{{ item }}" owner=root group=root mode=0644
      with_items:
        - clamav-update-docker.service
        - clamav-watchdog.service
        - vscode-extension-update-docker.service
        - vscode-update-docker.service
        - docker-update-docker.service
        - etc_watchdog.service
        - psutil_processmonitor.service

    - name: copy /etc/cron.monthly/docker_image_update.py
      copy: src=./files/cron.monthly/docker_image_update.py dest=/etc/cron.monthly/docker_image_update.py owner=root group=root mode=0755
    - name: copy /etc/cron.monthly/notify_viruscheck_cron.py
      copy: src=./files/cron.monthly/notify_viruscheck_cron.py dest=/etc/cron.monthly/notify_viruscheck_cron.py owner=root group=root mode=0755
    - name: copy /etc/cron.monthly/python_pip_upgrade
      copy: src=./files/cron.monthly/python_pip_upgrade dest=/etc/cron.monthly/python_pip_upgrade owner=root group=root mode=0755
    #- name: copy /etc/cron.monthly/docker_baseimage_upgrade
    #  copy: src=./files/cron.monthly/docker_baseimage_upgrade dest=/etc/cron.monthly/docker_baseimage_upgrade owner=root group=root mode=0755

    - name: copy /etc/apt/apt.conf.d/20auto-upgrades
      copy: src=./files/apt/apt.conf.d/20auto-upgrades dest=/etc/apt/apt.conf.d/20auto-upgrades owner=root group=root mode=0644

    - template:
        src: ./files/iptables/rules.v4.j2
        dest: /etc/iptables/rules.v4
        owner: root
        group: root

    - name: copy /etc/iptables/rules.v6
      copy: src=./files/iptables/rules.v6 dest=/etc/iptables/rules.v6 owner=root group=root
      when: not ansible_check_mode

    - name: edit clamd.conf
      lineinfile: 
        path: /etc/clamav/clamd.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^LocalSocketGroup', line: 'LocalSocketGroup root'}
        - { regexp: '^User', line: 'User root'}
        - { regexp: '^MaxDirectoryRecursion', line: 'MaxDirectoryRecursion 20'}
        - { regexp: '^ScanOnAccess', line: 'ScanOnAccess true'}
        - { regexp: '^MaxScanSize', line: 'MaxScanSize 0M'}
        - { regexp: '^MaxFileSize', line: 'MaxFileSize 0M'}
        - { regexp: '^MaxFiles', line: 'MaxFiles 100000'}
        - { regexp: '^OnAccessMountPath', line: 'OnAccessMountPath /'}

    - name: Unattended-Upgrade::Remove-Unused-Dependencies "true";
      lineinfile: 
        path: /etc/apt/apt.conf.d/50unattended-upgrades
        regexp: '^(//)?Unattended-Upgrade::Remove-Unused-Dependencies'
        line: 'Unattended-Upgrade::Remove-Unused-Dependencies "true";'

    - name: edit ntp.conf
      lineinfile: 
        path: /etc/ntp.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^pool 0.debian.pool.ntp.org iburst', line: '#pool 0.debian.pool.ntp.org iburst'}
        - { regexp: '^pool 1.debian.pool.ntp.org iburst', line: '#pool 1.debian.pool.ntp.org iburst'}
        - { regexp: '^pool 2.debian.pool.ntp.org iburst', line: '#pool 2.debian.pool.ntp.org iburst'}
        - { regexp: '^pool 3.debian.pool.ntp.org iburst', line: '#pool 3.debian.pool.ntp.org iburst'}
    - name: pool ntp.nict.jp iburst
      lineinfile: 
        path: /etc/ntp.conf
        line: 'pool ntp.nict.jp iburst'

    - name: build "firefox-image"
      docker_image:
        build:
          path: /opt/docker-image/firefox-package/firefox/
        name: firefox-image
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "firefox-image"
      docker_image:
        name: firefox-image:ansible-build
        repository: firefox-image:latest
      ignore_errors: "{{ ansible_check_mode }}"
    - name: build "freshclam"
      docker_image:
        build:
          path: /opt/docker-image/clamav-package/clamav/
        name: freshclam
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "freshclam"
      docker_image:
        name: freshclam:ansible-build
        repository: freshclam:latest
      ignore_errors: "{{ ansible_check_mode }}"
    - name: build "vscode-image"
      docker_image:
        build:
          path: /opt/docker-image/vscode-package/vscode/
          args:
            imagever: "{{ version_code.stdout }}"
        name: vscode-image
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "vscode-image"
      docker_image:
        name: vscode-image:ansible-build
        repository: vscode-image:latest
      ignore_errors: "{{ ansible_check_mode }}"
    - name: build "vscode-extension-image"
      docker_image:
        name: vscode-extension-image
        build:
          path: /opt/docker-image/vscode-extension-package/vscode-extension/
          args:
            imagever: ansible-build
        tag: ansible-build
        pull: no
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "vscode-extension-image"
      docker_image:
        name: vscode-extension-image:ansible-build
        repository: vscode-extension-image:latest
      ignore_errors: "{{ ansible_check_mode }}"
    - name: build "docker-image"
      docker_image:
        build:
          path: /opt/docker-image/docker-package/docker/
          args:
            imagever: "{{ version_code.stdout }}"
        name: docker-image
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "docker-image"
      docker_image:
        name: docker-image:ansible-build
        repository: docker-image:latest
      ignore_errors: "{{ ansible_check_mode }}"
    #- name: build "docker-image-image"
    #  docker_image:
    #    build:
    #      path: /opt/docker-image/docker-image-package/docker-image/
    #      args:
    #        imagever: ansible-build
    #    name: docker-image-image
    #    tag: ansible-build
    #  ignore_errors: "{{ ansible_check_mode }}"
    #- name: tag "docker-image-image"
    #  docker_image:
    #    name: docker-image-image:ansible-build
    #    repository: docker-image-image:latest
    #  ignore_errors: "{{ ansible_check_mode }}"
    - name: build "python-image"
      docker_image:
        build:
          path: /opt/docker-image/python-package/python/
          args:
            imagever: "{{ version_code.stdout }}"
        name: python-image
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "python-image"
      docker_image:
        name: python-image:ansible-build
        repository: python-image:latest
      ignore_errors: "{{ ansible_check_mode }}"

    - name: systemctl reload
      systemd:
        daemon_reload: yes
    - name: systemctl enable
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: yes
      with_items:
        - clamav-update-docker.service
        - clamav-watchdog.service
        - vscode-extension-update-docker.service
        - vscode-update-docker.service
        - docker-update-docker.service
        - etc_watchdog.service
        - psutil_processmonitor.service

    - name: mkdir HOME/.local/share/gnome-shell/extensions/{{ item }}
      file: path="{{ lookup('env', 'HOME') }}/.local/share/gnome-shell/extensions/{{ item }}" state=directory owner="{{ lookup('env', 'USERNAME') }}" group="{{ lookup('env', 'USERNAME') }}" mode=0755 recurse=yes
      become: no
      with_items:
        - panel-date-format@keiii.github.com
        - dynamic-panel-transparency@rockon999.github.io
    - name: Unarchive gnome plugin
      unarchive:
        src: "https://extensions.gnome.org/extension-data/{{ item.src }}"
        dest: "{{ lookup('env', 'HOME') }}/.local/share/gnome-shell/extensions/{{ item.dest }}"
        remote_src: yes
        owner: "{{ lookup('env', 'USERNAME') }}"
        group: "{{ lookup('env', 'USERNAME') }}"
      with_items:
        - { src: panel-date-format%40keiii.github.com.v1.shell-extension.zip, dest: panel-date-format@keiii.github.com }
        - { src: dynamic-panel-transparencyrockon999.github.io.v32.shell-extension.zip, dest: dynamic-panel-transparency@rockon999.github.io }
      ignore_errors: "{{ ansible_check_mode }}"
    - name: gnome-shell-extension-tool -e
      shell: gnome-shell-extension-tool -e {{ item }}
      become: no
      with_items:
        - panel-date-format@keiii.github.com
        - dynamic-panel-transparency@rockon999.github.io
      ignore_errors: yes

    - name: copy HOME/.local/share/applications/Firefox_with_Docker.desktop
      copy: src=./files/Firefox_with_Docker.desktop dest="{{ lookup('env', 'HOME') }}/.local/share/applications/Firefox_with_Docker.desktop" owner="{{ lookup('env', 'USERNAME') }}" group="{{ lookup('env', 'USERNAME') }}" mode=0755
      become: no

    - name: gsettings --schemadir
      shell: gsettings set org.gnome.shell.extensions.dash-to-dock dock-position 'BOTTOM'
      become: no
      ignore_errors: yes
    - name: gsettings --schemadir
      shell: gsettings set org.gnome.shell.extensions.dash-to-dock transparency-mode 'FIXED'
      become: no
      ignore_errors: yes
    - name: gsettings --schemadir
      shell: gsettings set org.gnome.shell.extensions.dash-to-dock background-opacity 0.5
      become: no
      ignore_errors: yes
    - name: gsettings
      shell: gsettings set {{ item.schema }} {{ item.key }} {{ item.value }}
      become: no
      with_items:
        - { schema: org.gnome.shell.extensions.user-theme, key: name, value: 'Adapta-Nokto' }
        - { schema: org.gnome.desktop.interface, key: gtk-theme, value: 'Adapta-Nokto' }
        - { schema: org.gnome.desktop.interface, key: icon-theme, value: 'Paper' }
        - { schema: org.gnome.desktop.wm.preferences, key: button-layout, value: 'appmenu:minimize,maximize,close' }
        #- { schema: org.gnome.settings-daemon.plugins.xsettings, key: overrides, value: {'Gtk/ShellShowsAppMenu': <0>} }
        #- { schema: org.gnome.shell, key: enabled-extensions, value: "{{ '"' }}"['dash-to-dock@micxgx.gmail.com', 'user-theme@gnome-shell-extensions.gcampax.github.com', 'drive-menu@gnome-shell-extensions.gcampax.github.com', 'activities-config@nls1729', 'Move_Clock@rmy.pobox.com', 'panel-date-format@keiii.github.com']"{{ '"' }}" }
        #- { schema: org.gnome.shell, key: favorite-apps, value: "{{ '"' }}"['Firefox_with_Docker.desktop', 'org.gnome.Nautilus.desktop', 'code.desktop', 'org.gnome.Terminal.desktop']"{{ '"' }}" }
      ignore_errors: yes
    - name: gsettings
      shell: gsettings set org.gnome.settings-daemon.plugins.xsettings overrides "{'Gtk/ShellShowsAppMenu'{{ ':' }} <0>}"
      become: no
      ignore_errors: yes
    - name: gsettings
      shell: gsettings set org.gnome.shell enabled-extensions "['dash-to-dock@micxgx.gmail.com', 'user-theme@gnome-shell-extensions.gcampax.github.com', 'drive-menu@gnome-shell-extensions.gcampax.github.com', 'panel-date-format@keiii.github.com', 'Move_Clock@jonathan.bluemosh.com', 'dynamic-panel-transparency@rockon999.github.io', 'Hide_Activities@shay.shayel.org']"
      become: no
      ignore_errors: yes
    - name: gsettings
      shell: gsettings set org.gnome.shell favorite-apps "['Firefox_with_Docker.desktop', 'org.gnome.Nautilus.desktop', 'code.desktop', 'org.gnome.Terminal.desktop']"
      become: no
      ignore_errors: yes

    - name: mkdir /etc/skel/.local/share/applications
      file: path=/etc/skel/.local/share/applications state=directory owner=root group=root mode=0755 recurse=yes
    - name: copy /etc/skel/.local/share/applications/Firefox_with_Docker.desktop
      copy: src=./files/Firefox_with_Docker.desktop dest=/etc/skel/.local/share/applications/Firefox_with_Docker.desktop owner=root group=root mode=0755

    - name: mkdir /etc/skel/.config/dconf
      file: path=/etc/skel/.config/dconf state=directory owner=root group=root mode=0755 recurse=yes
    - name: copy /etc/skel/.config/dconf/user
      copy: src="{{ lookup('env', 'HOME') }}/.config/dconf/user" dest=/etc/skel/.config/dconf/user owner=root group=root mode=0644

    - name: mkdir /etc/skel/.local/share/gnome-shell/extensions/{{ item }}
      file: path="/etc/skel/.local/share/gnome-shell/extensions/{{ item }}" state=directory owner=root group=root mode=0755 recurse=yes
      with_items:
        - panel-date-format@keiii.github.com
        - dynamic-panel-transparency@rockon999.github.io
    - name: Unarchive gnome plugin
      unarchive:
        src: "https://extensions.gnome.org/extension-data/{{ item.src }}"
        dest: "/etc/skel/.local/share/gnome-shell/extensions/{{ item.dest }}"
        remote_src: yes
        owner: root
        group: root
      with_items:
        - { src: panel-date-format%40keiii.github.com.v1.shell-extension.zip, dest: panel-date-format@keiii.github.com }
        - { src: dynamic-panel-transparencyrockon999.github.io.v32.shell-extension.zip, dest: dynamic-panel-transparency@rockon999.github.io }
      ignore_errors: "{{ ansible_check_mode }}"

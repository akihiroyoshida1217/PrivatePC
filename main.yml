#ansible-playbook main.yml --ask-become-pass -vvvv

- hosts: localhost
  connection: local
  become: yes
  vars:
    #network_interface: eth0
    private_network_address: 192.168.10.0/24

  tasks:
    - name: Get version_code
      shell: cat /etc/os-release | grep VERSION_CODENAME | awk -F'=' '{print $2}'
      register: version_code

    - name: pre-install packages
      apt: name={{ item }} update_cache=yes cache_valid_time=3600
      with_items:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg2
        - python-pip
        - dnsutils
        - iptables
        - iptables-persistent
      ignore_errors: "{{ ansible_check_mode }}"

    - name: resolv ntp.nict.jp
      shell: host -4 -t A ntp.nict.jp | awk '{ print $4 }'
      register: ntp_nict_jp
    #- name: resolv ftp1.debian.or.jp
    #  shell: host -4 -t A ftp1.debian.or.jp | awk '{ print $4 }'
    #  register: ftp1_debian_or_jp
    - name: resolv ftp.nara.wide.ad.jp
      shell: host -4 -t A ftp.nara.wide.ad.jp | awk '{ print $4 }'
      register: ftp_nara_wide_ad_jp
    - name: resolv ftp.tsukuba.wide.ad.jp
      shell: host -4 -t A ftp.tsukuba.wide.ad.jp | awk '{ print $4 }'
      register: ftp_tsukuba_wide_ad_jp
    - name: resolv dennou-h.gfd-dennou.org
      shell: host -4 -t A dennou-h.gfd-dennou.org | awk '{ print $4 }'
      register: dennou_h_gfd_dennou_org
    - name: resolv dennou-k.gfd-dennou.org
      shell: host -4 -t A dennou-k.gfd-dennou.org | awk '{ print $4 }'
      register: dennou_k_gfd_dennou_org
    - name: resolv dennou-q.gfd-dennou.org
      shell: host -4 -t A dennou-q.gfd-dennou.org | awk '{ print $4 }'
      register: dennou_q_gfd_dennou_org
    - name: resolv debian-mirror.sakura.ne.jp
      shell: host -4 -t A debian-mirror.sakura.ne.jp | awk '{ print $4 }'
      register: debian_mirror_sakura_ne_jp
    - name: resolv riksun.riken.go.jp
      shell: host -4 -t A riksun.riken.go.jp | awk '{ print $4 }'
      register: riksun_riken_go_jp
    - name: resolv infoserv.ics.es.osaka-u.ac.jp
      shell: host -4 -t A infoserv.ics.es.osaka-u.ac.jp | awk '{ print $4 }'
      register: infoserv_ics_es_osaka_u_ac_jp
    - name: resolv ftp.kddilabs.jp
      shell: host -4 -t A ftp.kddilabs.jp | awk '{ print $4 }'
      register: ftp_kddilabs_jp
    - name: resolv ring.shibaura-it.ac.jp
      shell: host -4 -t A ring.shibaura-it.ac.jp | awk '{ print $4 }'
      register: ring_shibaura_it_ac_jp
    - name: resolv ring.u-toyama.ac.jp
      shell: host -4 -t A ring.u-toyama.ac.jp | awk '{ print $4 }'
      register: ring_u_toyama_ac_jp
    - name: resolv ring.airnet.ne.jp
      shell: host -4 -t A ring.airnet.ne.jp | awk '{ print $4 }'
      register: ring_airnet_ne_jp
    - name: resolv ring.ix.oita-u.ac.jp
      shell: host -4 -t A ring.ix.oita-u.ac.jp | awk '{ print $4 }'
      register: ring_ix_oita_u_ac_jp
    - name: resolv security.debian.org
      shell: host -4 -t A security.debian.org | awk '{ print $4 }'
      register: security_debian_org
    - name: resolv ftp.jp.debian.org(jp.cdn.araki.net)
      shell: host -4 -t A jp.cdn.araki.net | awk '{ print $4 }'
      register: ftp_jp_debian_org
    - name: resolv download.docker.com(d2h67oheeuigaw.cloudfront.net)
      shell: for i in {1..3};do host -4 -t A d2h67oheeuigaw.cloudfront.net | awk '{print $4}';done
      register: download_docker_com
    - name: resolv auth.docker.io
      shell: host -4 -t A auth.docker.io | awk '{ print $4 }'
      register: auth_docker_io
    - name: resolv registry-1.docker.io
      shell: host -4 -t A registry-1.docker.io | awk '{ print $4 }'
      register: registry_1_docker_io
    - name: resolv production.cloudflare.docker.com
      shell: host -4 -t A production.cloudflare.docker.com | awk '{ print $4 }'
      register: production_cloudflare_docker_com
    - name: resolv github.com
      shell: for i in {1..5};do host -4 -t A github.com | awk '{print $4}';done
      register: github_com
    - name: resolv codeload.github.com
      shell: for i in {1..5};do host -4 -t A codeload.github.com | awk '{print $4}';done
      register: codeload_github_com
    - name: resolv prod.debian.map.fastly.net
      shell: host -4 -t A prod.debian.map.fastly.net | awk '{ print $4 }'
      register: prod_debian_map_fastly_net
    - name: resolv ppa.launchpad.net
      shell: host -4 -t A ppa.launchpad.net | awk '{ print $4 }'
      register: ppa_launchpad_net
    - name: resolv keyserver.ubuntu.com
      shell: host -4 -t A keyserver.ubuntu.com | awk '{ print $4 }'
      register: keyserver_ubuntu_com
    - name: resolv openshift.gnome.org
      shell: host -4 -t A openshift.gnome.org | awk '{ print $4 }'
      register: openshift_gnome_org
    - name: resolv pypi.org
      shell: host -4 -t A pypi.org | awk '{ print $4 }'
      register: pypi_org
    - name: resolv bootstrap.pypa.io(dualstack.c.ssl.global.fastly.net)
      shell: host -4 -t A dualstack.c.ssl.global.fastly.net | awk '{ print $4 }'
      register: bootstrap_pypa_io
    - name: resolv pypi.python.org(dualstack.python.map.fastly.net)
      shell: host -4 -t A dualstack.python.map.fastly.net | awk '{ print $4 }'
      register: pypi_python_org
    - name: resolv files.pythonhosted.org(dualstack.r.ssl.global.fastly.net)
      shell: host -4 -t A dualstack.r.ssl.global.fastly.net | awk '{ print $4 }'
      register: files_pythonhosted_org
    - name: resolv packages.microsoft.com(csd-apt-eas-d-1.eastasia.cloudapp.azure.com)
      shell: host -4 -t A csd-apt-eas-d-1.eastasia.cloudapp.azure.com | awk '{ print $4 }'
      register: csd_apt_eas_d_1_eastasia_cloudapp_azure_com
    - name: resolv packages.microsoft.com(csd-apt-eas-d-2.eastasia.cloudapp.azure.com)
      shell: host -4 -t A csd-apt-eas-d-2.eastasia.cloudapp.azure.com | awk '{ print $4 }'
      register: csd_apt_eas_d_2_eastasia_cloudapp_azure_com
    - name: resolv packages.microsoft.com(csd-apt-eas-d-3.eastasia.cloudapp.azure.com)
      shell: host -4 -t A csd-apt-eas-d-3.eastasia.cloudapp.azure.com | awk '{ print $4 }'
      register: csd_apt_eas_d_3_eastasia_cloudapp_azure_com
    - name: resolv packages.microsoft.com(csd-apt-eas-d-4.eastasia.cloudapp.azure.com)
      shell: host -4 -t A csd-apt-eas-d-4.eastasia.cloudapp.azure.com | awk '{ print $4 }'
      register: csd_apt_eas_d_4_eastasia_cloudapp_azure_com
    - name: resolv launchpad-net.nutmeg.canonical.com
      shell: host -4 -t A launchpad-net.nutmeg.canonical.com | awk '{ print $4 }'
      register: launchpad_net_nutmeg_canonical_com
    - name: resolv launchpad-net.banana.canonical.com
      shell: host -4 -t A launchpad-net.banana.canonical.com | awk '{ print $4 }'
      register: launchpad_net_banana_canonical_com

    - template:
        src: ./files/iptables/rules.v4.tmp.j2
        dest: /etc/iptables/rules.v4
        owner: root
        group: root
    - name: copy /etc/iptables/rules.v6
      copy: 
        src: ./files/iptables/rules.v6
        dest: /etc/iptables/rules.v6
        owner: root
        group: root
      when: not ansible_check_mode

    - name: netfilter-persistent reload
      shell: netfilter-persistent reload
    - name: restart docker
      systemd:
        state: restarted
        daemon_reload: yes
        name: docker
      ignore_errors: yes

    - name: Add an Apt signing key https://download.docker.com/linux/debian/gpg
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present

    - name: Add an Apt signing key https://packages.microsoft.com/keys/microsoft.asc
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present

    - name: Add an apt key adapta-gtk-theme and paper-icon-theme by id from a keyserver
      apt_key:
        keyserver: "{{ item.keyserver }}"
        id: "{{ item.id }}"
      with_items:
        - { keyserver: keyserver.ubuntu.com, id: EAC0D406E5D79A82ADEEDFDFB76E53652D87398A }
        - { keyserver: keyserver.ubuntu.com, id: D320D0C30B02E64C5B2BB2743766223989993A70 }

    - name: add apt repository docker
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/debian {{ version_code.stdout }} stable
        state: present
        filename: docker

    - name: add apt repository docker
      apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
        state: present
        filename: vscode
        
    - name: add apt repository ppa:snwh/ppa
      apt_repository:
        repo: "{{ item }}"
        codename: bionic
        state: present
        filename: ppa
      with_items:
        - 'ppa:snwh/ppa'
        - 'ppa:tista/adapta'

    - name: remove packages
      apt: 
        name: "{{ item }}"
        state: absent
      with_items:
        - docker
        - docker-engine
    - name: install packages
      apt: name={{ item }} update_cache=yes cache_valid_time=3600
      with_items:
        - ntp
        - mailutils
        - unattended-upgrades
        #- iptables
        #- iptables-persistent
        - software-properties-common
        - locales-all
        - ibus-mozc
        - clamav-daemon
        - gnome-tweak-tool
        - adapta-gtk-theme
        - paper-icon-theme
        - alacarte
        - policykit-1
        - libnotify-bin
        - build-essential
        - libsystemd-dev
        - libgconf-2-4
        - gconf2-common
        - docker-ce
        - cifs-utils
        - python3-pkgconfig
        - auditd
        - gnome-shell-extension-move-clock
        - gnome-shell-extension-hide-activities
        - gnome-shell-extension-dashtodock
        - gnome-shell-extension-pixelsaver
        - apparmor-utils
        - tcpdump
        - wireshark
        - vlc
      ignore_errors: "{{ ansible_check_mode }}"
    #- name: install packages
    #  apt: 
    #    name: libgtk-3-common
    #    update_cache: yes 
    #    cache_valid_time: 3600
    #    default_release: testing
    #  ignore_errors: "{{ ansible_check_mode }}"

    - pip:
        name: "{{ item }}"
        executable: pip3
      with_items:
          - docker-compose
          - docker
          - watchdog
          - pylint
          - systemd-python
          - psutil
      ignore_errors: "{{ ansible_check_mode }}"
    #- pip:
    #    name: docker
    #    executable: pip2
    #  ignore_errors: "{{ ansible_check_mode }}"

    - name: copy /opt
      copy:
        src: ./files/opt/
        dest: /opt
        owner: root
        group: root
      when: not ansible_check_mode

    - name: chmod 755 /opt
      file: 
        path: "{{ item }}"
        owner: root 
        group: root
        mode: 0755
      with_items:
        - /opt/clamav/notify_viruscheck_watchdog.py
        - /opt/etc_watchdog/etc_watchdog.py
        - /opt/psutil/psutil_processmonitor.py
        - /opt/docker-image/firefox-package/Firefox_with_Docker-pkexec
        - /opt/docker-image/vscode-extension-package/vscode-extension-update.py
      when: not ansible_check_mode

    - name: chown 1014:1014 /opt/docker-image/docker-image-package/docker-image/image
      file: 
        path: /opt/docker-image/docker-image-package/docker-image/image
        state: directory
        owner: 1014
        group: 1014
      when: not ansible_check_mode

    - name: mv /etc/audit/rules.d/audit.rules etc/audit/rules.d/audit.rules.org
      command: "mv /etc/audit/rules.d/audit.rules etc/audit/rules.d/audit.rules.org"
      ignore_errors: yes
    - name: copy /etc/audit/rules.d/audit.rules
      copy: 
        src: ./files/auditd.rules
        dest: /etc/audit/rules.d/audit.rules
        owner: root
        group: root
        mode: 0640
      
    - name: systemctl disable
      systemd:
        name: clamav-freshclam
        state: stopped
        enabled: no
    - name: chown 1010:1010 /opt/docker-image/clamav-package/clamav/patternfile
      file: 
        path: /opt/docker-image/clamav-package/clamav/patternfile
        state: directory
        owner: 1010
        group: 1010
      when: not ansible_check_mode
    - name: edit clamd.conf
      lineinfile: 
        path: /etc/clamav/clamd.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^LocalSocketGroup', line: 'LocalSocketGroup root'}
        - { regexp: '^User', line: 'User root'}
        - { regexp: '^MaxDirectoryRecursion', line: 'MaxDirectoryRecursion 20'}
        - { regexp: '^ScanOnAccess', line: 'ScanOnAccess true'}
        - { regexp: '^MaxScanSize', line: 'MaxScanSize 0M'}
        - { regexp: '^MaxFileSize', line: 'MaxFileSize 0M'}
        - { regexp: '^MaxFiles', line: 'MaxFiles 100000'}
        - { regexp: '^OnAccessMountPath', line: 'OnAccessMountPath /'}
    - name: aa-complain /usr/sbin/clamd
      shell: aa-complain /usr/sbin/clamd
      ignore_errors: yes
    - name: freshclam
      shell: freshclam
      ignore_errors: yes

    - name: copy /etc/systemd/system/{{ item }}
      copy: 
        src: "./files/systemd/system/{{ item }}"
        dest: "/etc/systemd/system/{{ item }}"
        owner: root
        group: root
        mode: 0644
      with_items:
        - clamav-update-docker.service
        - clamav-watchdog.service
        - vscode-extension-update-docker.service
        - vscode-update-docker.service
        - docker-update-docker.service
        - etc_watchdog.service
        - psutil_processmonitor.service

    - name: copy /etc/cron.monthly/
      copy: 
        src: "./files/cron.monthly/{{ item }}"
        dest: "/etc/cron.monthly/{{ item }}"
        owner: root
        group: root
        mode: 0755
      with_items:
        - docker_image_update.py
        - notify_viruscheck_cron.py
        - python_pip_upgrade

    - name: copy /etc/apt/apt.conf.d/20auto-upgrades
      copy: 
        src: ./files/apt/apt.conf.d/20auto-upgrades
        dest: /etc/apt/apt.conf.d/20auto-upgrades
        owner: root
        group: root
        mode: 0644
    - name: Unattended-Upgrade::Remove-Unused-Dependencies "true";
      lineinfile: 
        path: /etc/apt/apt.conf.d/50unattended-upgrades
        regexp: '^(//)?Unattended-Upgrade::Remove-Unused-Dependencies'
        line: 'Unattended-Upgrade::Remove-Unused-Dependencies "true";'

    - template:
        src: ./files/iptables/rules.v4.j2
        dest: /etc/iptables/rules.v4
        owner: root
        group: root
    - name: copy /etc/iptables/rules.v6
      copy: 
        src: ./files/iptables/rules.v6
        dest: /etc/iptables/rules.v6
        owner: root
        group: root
      when: not ansible_check_mode

    - name: edit ntp.conf
      lineinfile: 
        path: /etc/ntp.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^pool 0.debian.pool.ntp.org iburst', line: '#pool 0.debian.pool.ntp.org iburst'}
        - { regexp: '^pool 1.debian.pool.ntp.org iburst', line: '#pool 1.debian.pool.ntp.org iburst'}
        - { regexp: '^pool 2.debian.pool.ntp.org iburst', line: '#pool 2.debian.pool.ntp.org iburst'}
        - { regexp: '^pool 3.debian.pool.ntp.org iburst', line: '#pool 3.debian.pool.ntp.org iburst'}
    - name: pool ntp.nict.jp iburst
      lineinfile: 
        path: /etc/ntp.conf
        line: 'pool ntp.nict.jp iburst'

    - name: localectl set-locale LANG="ja_JP.UTF-8" LANGUAGE="ja_JP:ja"
      shell: localectl set-locale LANG="ja_JP.UTF-8" LANGUAGE="ja_JP:ja"

    - name: build "firefox-image"
      docker_image:
        build:
          path: /opt/docker-image/firefox-package/firefox/
        name: firefox-image
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "firefox-image"
      docker_image:
        name: firefox-image:ansible-build
        repository: firefox-image:latest
      ignore_errors: "{{ ansible_check_mode }}"
    - name: Get clamav_uid
      shell: id -u clamav
      register: clamav_uid
    - name: Get clamav_gid
      shell: id -g clamav
      register: clamav_gid
    - name: build "freshclam"
      docker_image:
        build:
          path: /opt/docker-image/clamav-package/clamav/
          args:
            clamav_uid: "{{ clamav_uid.stdout }}"
            clamav_gid: "{{ clamav_gid.stdout }}"
        name: freshclam
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "freshclam"
      docker_image:
        name: freshclam:ansible-build
        repository: freshclam:latest
      ignore_errors: "{{ ansible_check_mode }}"
    - name: build "vscode-image"
      docker_image:
        build:
          path: /opt/docker-image/vscode-package/vscode/
          args:
            imagever: "{{ version_code.stdout }}"
        name: vscode-image
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "vscode-image"
      docker_image:
        name: vscode-image:ansible-build
        repository: vscode-image:latest
      ignore_errors: "{{ ansible_check_mode }}"
    - name: build "vscode-extension-image"
      docker_image:
        name: vscode-extension-image
        build:
          path: /opt/docker-image/vscode-extension-package/vscode-extension/
          args:
            imagever: ansible-build
        tag: ansible-build
        pull: no
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "vscode-extension-image"
      docker_image:
        name: vscode-extension-image:ansible-build
        repository: vscode-extension-image:latest
      ignore_errors: "{{ ansible_check_mode }}"
    - name: build "docker-image"
      docker_image:
        build:
          path: /opt/docker-image/docker-package/docker/
          args:
            imagever: "{{ version_code.stdout }}"
        name: docker-image
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "docker-image"
      docker_image:
        name: docker-image:ansible-build
        repository: docker-image:latest
      ignore_errors: "{{ ansible_check_mode }}"
    - name: build "docker-image-image"
      docker_image:
        build:
          path: /opt/docker-image/docker-image-package/docker-image/
        name: docker-image-image
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "docker-image-image"
      docker_image:
        name: docker-image-image:ansible-build
        repository: docker-image-image:latest
      ignore_errors: "{{ ansible_check_mode }}"
    - name: build "python-image"
      docker_image:
        build:
          path: /opt/docker-image/python-package/python/
          args:
            imagever: "{{ version_code.stdout }}"
        name: python-image
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "python-image"
      docker_image:
        name: python-image:ansible-build
        repository: python-image:latest
      ignore_errors: "{{ ansible_check_mode }}"

    - name: mkdir /opt/docker-image/kvm
      file: 
        path: "/opt/docker-image/kvm"
        state: directory
        owner: root
        group: root
        mode: 0755
        recurse: yes
    - git:
        repo: https://github.com/ianblenke/docker-kvm.git
        dest: /opt/docker-image/kvm
    - name: copy /opt/docker-image/kvm/Dockerfile
      copy: 
        src: /opt/docker-image/kvm/Dockerfile
        dest: /opt/docker-image/kvm/Dockerfile.org
        owner: root
        group: root
        mode: 0640
    - name: edit /opt/docker-image/kvm/Dockerfile
      lineinfile: 
        path: /opt/docker-image/kvm/Dockerfile
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - { regexp: '^FROM ubuntu:trusty', line: 'FROM debian:latest'}
        - { regexp: '^RUN DEBIAN_FRONTEND=noninteractive apt-get -y install kvm qemu-kvm libvirt-bin bridge-utils libguestfs-tools aria2 unzip dos2unix unrar-free wget git', line: 'RUN DEBIAN_FRONTEND=noninteractive apt-get -y install qemu-kvm libvirt0 bridge-utils libguestfs-tools aria2 unzip dos2unix unrar-free wget git'}
    - name: build "ianblenke/kvm"
      docker_image:
        build:
          path: /opt/docker-image/kvm/Dockerfile
        name: ianblenke/kvm
        tag: ansible-build
      ignore_errors: "{{ ansible_check_mode }}"
    - name: tag "ianblenke/kvm"
      docker_image:
        name: ianblenke/kvm:ansible-build
        repository: ianblenke/kvm:latest
      ignore_errors: "{{ ansible_check_mode }}"
      
    - name: systemctl reload
      systemd:
        daemon_reload: yes
    - name: systemctl enable
      systemd:
        name: "{{ item }}"
        state: stopped
        enabled: yes
      with_items:
        - clamav-update-docker.service
        - clamav-watchdog.service
        - vscode-extension-update-docker.service
        - vscode-update-docker.service
        - docker-update-docker.service
        - etc_watchdog.service
        - psutil_processmonitor.service

    - name: mkdir HOME/.local/share/gnome-shell/extensions/{{ item }}
      file: 
        path: "{{ lookup('env', 'HOME') }}/.local/share/gnome-shell/extensions/{{ item }}"
        state: directory
        owner: "{{ lookup('env', 'USERNAME') }}"
        group: "{{ lookup('env', 'USERNAME') }}"
        mode: 0755
        recurse: yes
      become: no
      with_items:
        - panel-date-format@keiii.github.com
        - dynamic-panel-transparency@rockon999.github.io
    - name: Unarchive gnome plugin
      unarchive:
        src: "https://extensions.gnome.org/extension-data/{{ item.src }}"
        dest: "{{ lookup('env', 'HOME') }}/.local/share/gnome-shell/extensions/{{ item.dest }}"
        remote_src: yes
        owner: "{{ lookup('env', 'USERNAME') }}"
        group: "{{ lookup('env', 'USERNAME') }}"
      with_items:
        - { src: panel-date-format%40keiii.github.com.v1.shell-extension.zip, dest: panel-date-format@keiii.github.com }
        - { src: dynamic-panel-transparencyrockon999.github.io.v32.shell-extension.zip, dest: dynamic-panel-transparency@rockon999.github.io }
      ignore_errors: "{{ ansible_check_mode }}"
    - name: gnome-shell-extension-tool -e
      shell: gnome-shell-extension-tool -e {{ item }}
      become: no
      with_items:
        - panel-date-format@keiii.github.com
        - dynamic-panel-transparency@rockon999.github.io
      ignore_errors: yes

    - name: copy HOME/.local/share/applications/Firefox_with_Docker.desktop
      copy: 
        src: ./files/Firefox_with_Docker.desktop
        dest: "{{ lookup('env', 'HOME') }}/.local/share/applications/Firefox_with_Docker.desktop"
        owner: "{{ lookup('env', 'USERNAME') }}"
        group: "{{ lookup('env', 'USERNAME') }}"
        mode: 0755
      become: no

    - name: copy HOME/.local/share/applications/org.gnome.Terminal.desktop
      copy: 
        src: ./files/org.gnome.Terminal.desktop
        dest: "{{ lookup('env', 'HOME') }}/.local/share/applications/org.gnome.Terminal.desktop"
        owner: "{{ lookup('env', 'USERNAME') }}"
        group: "{{ lookup('env', 'USERNAME') }}"
        mode: 0755
      become: no
      
    - name: copy /usr/bin/termlog
      copy: 
        src: ./files/termlog
        dest: "/usr/bin/termlog"
        owner: root
        group: root
        mode: 0755
      
    - name: gsettings
      shell: gsettings set {{ item.schema }} {{ item.key }} "{{ item.value }}"
      become: no
      with_items:
        - { schema: org.gnome.shell.extensions.user-theme, key: name, value: 'Adapta-Nokto' }
        - { schema: org.gnome.desktop.interface, key: gtk-theme, value: 'Adapta-Nokto' }
        - { schema: org.gnome.desktop.interface, key: icon-theme, value: 'Paper' }
        - { schema: org.gnome.desktop.wm.preferences, key: button-layout, value: 'appmenu:minimize,maximize,close' }
        - { schema: org.gnome.settings-daemon.plugins.xsettings, key: overrides, value: "{'Gtk/ShellShowsAppMenu'{{ ':' }} <0>}" }
        - { schema: org.gnome.shell, key: enabled-extensions, value: "['dash-to-dock@micxgx.gmail.com', 'user-theme@gnome-shell-extensions.gcampax.github.com', 'drive-menu@gnome-shell-extensions.gcampax.github.com', 'panel-date-format@keiii.github.com', 'Move_Clock@jonathan.bluemosh.com', 'dynamic-panel-transparency@rockon999.github.io', 'Hide_Activities@shay.shayel.org', 'pixel-saver@deadalnix.me']" }
        - { schema: org.gnome.shell, key: favorite-apps, value: "['Firefox_with_Docker.desktop', 'org.gnome.Nautilus.desktop', 'code.desktop', 'org.gnome.Terminal.desktop']" }
        - { schema: org.gnome.shell.extensions.dash-to-dock, key: dock-position, value: 'BOTTOM' }
        - { schema: org.gnome.shell.extensions.dash-to-dock, key: transparency-mode, value: 'FIXED' }
        - { schema: org.gnome.shell.extensions.dash-to-dock, key: background-opacity, value: 0.5 }
        - { schema: org.gnome.desktop.input-sources, key: sources, value: "[('ibus', 'mozc-jp'), ('xkb', 'jp')]" }
      ignore_errors: yes

    - name: mkdir ~/Downloads
      file: 
        path: "{{ lookup('env', 'HOME') }}/Downloads"
        state: directory
        owner: "{{ lookup('env', 'USERNAME') }}"
        group: "{{ lookup('env', 'USERNAME') }}"
        mode: 0755
        recurse: yes
      become: no

    - name: mkdir ~/log/term
      file: 
        path: "{{ lookup('env', 'HOME') }}/log/term"
        state: directory
        owner: "{{ lookup('env', 'USERNAME') }}"
        group: "{{ lookup('env', 'USERNAME') }}"
        mode: 0755
        recurse: yes
      become: no

    - name: copy HOME/kvm
      copy: 
        src: ./files/kvm
        dest: "{{ lookup('env', 'HOME') }}/kvm"
        owner: "{{ lookup('env', 'USERNAME') }}"
        group: "{{ lookup('env', 'USERNAME') }}"
      become: no
      
    - name: mkdir /etc/skel/.local/share/applications
      file: 
        path: /etc/skel/.local/share/applications
        state: directory
        owner: root
        group: root
        mode: 0755
        recurse: yes
    - name: copy /etc/skel/.local/share/applications/Firefox_with_Docker.desktop
      copy: 
        src: ./files/Firefox_with_Docker.desktop
        dest: /etc/skel/.local/share/applications/Firefox_with_Docker.desktop
        owner: root
        group: root
        mode: 0755

    - name: copy /etc/skel/.local/share/applications/org.gnome.Terminal.desktop
      copy: 
        src: ./files/org.gnome.Terminal.desktop
        dest: /etc/skel/.local/share/applications/org.gnome.Terminal.desktop
        owner: root
        group: root
        mode: 0755
        
    - name: mkdir /etc/skel/.config/dconf
      file: 
        path: /etc/skel/.config/dconf
        state: directory
        owner: root
        group: root
        mode: 0755
        recurse: yes
    - name: copy /etc/skel/.config/dconf/user
      copy: 
        src: "{{ lookup('env', 'HOME') }}/.config/dconf/user"
        dest: /etc/skel/.config/dconf/user
        owner: root
        group: root
        mode: 0644

    - name: mkdir /etc/skel/.local/share/gnome-shell/extensions/{{ item }}
      file: 
        path: "/etc/skel/.local/share/gnome-shell/extensions/{{ item }}"
        state: directory
        owner: root
        group: root
        mode: 0755
        recurse: yes
      with_items:
        - panel-date-format@keiii.github.com
        - dynamic-panel-transparency@rockon999.github.io
    - name: Unarchive gnome plugin
      unarchive:
        src: "https://extensions.gnome.org/extension-data/{{ item.src }}"
        dest: "/etc/skel/.local/share/gnome-shell/extensions/{{ item.dest }}"
        remote_src: yes
        owner: root
        group: root
      with_items:
        - { src: panel-date-format%40keiii.github.com.v1.shell-extension.zip, dest: panel-date-format@keiii.github.com }
        - { src: dynamic-panel-transparencyrockon999.github.io.v32.shell-extension.zip, dest: dynamic-panel-transparency@rockon999.github.io }
      ignore_errors: "{{ ansible_check_mode }}"

    - name: mkdir /etc/skel/Downloads
      file: 
        path: /etc/skel/Downloads
        state: directory
        owner: root
        group: root
        mode: 0755
        recurse: yes

    - name: mkdir /etc/skel/log/term
      file: 
        path: /etc/skel/log/term
        state: directory
        owner: root
        group: root
        mode: 0755
        recurse: yes
        
    - name: mv /etc/apt/sources.list.d/{{ item }} /etc/apt/sources.list.d/{{ item }}.`date +\"%Y%m%d\"`
      command: "mv /etc/apt/sources.list.d/{{ item }} /etc/apt/sources.list.d/{{ item }}.{{ lookup('pipe', 'date +%Y%m%d') }}"
      with_items:
        - docker.list
        - ppa.list
        - vscode.list
      ignore_errors: yes

    - name: copy /etc/skel/kvm
      copy: 
        src: ./files/kvm
        dest: /etc/skel/kvm
        owner: root
        group: root
      become: no
